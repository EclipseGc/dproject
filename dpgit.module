<?php
/**
 * This module provides integration with the git versioning system
 *
 * @version $Id$
 **/

/**
 * Implementation of hook_dproject_api
 *
 * @return void
 */
function dpgit_dproject_api() {
  return array(
    '1' => array(
      'path' => drupal_get_path('module', 'dpgit') . '/includes',
      'packagers' => array(
        'git' => array(
          'name' => t('Git repository'),
          'class' => 'DPGitPackager',
          'dependecies' => 'DProjectPackager',
        ),
      ),
    ),
  );
}

/**
 * Implementation of hook_theme
 */
function dpgit_theme() {
  return array(
    'git_log' => array(
      'function' => '_dpgit_theme_log',
      'arguments' => array('log' => array()),
    ),
    'git_log_item' => array(
      'function' => '_dpgit_theme_log_item',
      'arguments' => array('sha1'=>'', 'item' => array()),
    ),
  );
}

/**
 * Implementation of hook_menu
 */
function dpgit_menu() {
  $items = array();

  $items['admin/settings/git'] = array(
    'title' => 'Git settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_dpgit_settings'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

function _dpgit_settings($form_state) {
  $form = array();
  $git_path = variable_get('git_path', 'git');
  $form['git_path'] = array(
    '#title' => t('Git path'),
    '#type' => 'textfield',
    '#default_value' => $git_path,
  );

  return system_settings_form($form);
}

/**
 * Theme function for git logs
 *
 * @param array $log
 *  A log array from _dpgit_log
 * @return string
 *  The themed log
 */
function _dpgit_theme_log($log) {
  $out = '<ol class="git-log">';
  foreach ($log as $sha1 => $item) {
    $out .= '<li class="commit">';
    $out .= theme('git_log_item', $sha1, $item);
    $out .= '</li>';
  }
  return $out . '</ol>';
}

function _dpgit_theme_log_item($sha1, $item) {
  $out .= '<dl class="header">';
  $out .=   '<dt>sha1</dt><dd class="sha1">' . $sha1 . '</dd>';
  foreach ($item['header'] as $name => $value) {
    $out .= '<dt>' . $name . '</dt><dd>' . htmlspecialchars($value) . '</dd>';
  }
  $out .= '</dl>';
  $out .= '<div class="message">' . nl2br(htmlspecialchars($item['message'])) . '</div>';
  $out .= '<ul class="files">';
  foreach ($item['files'] as $file => $status) {
    $out .= '<li class="file file-' . strtolower($status) . '">' .
      '<span class="file-status">' . $status . '</span> ' .
      '<span class="file-name">' . htmlspecialchars($file) . '</span></li>';
  }
  $out .= '</ul>';
  return $out;
}
